# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /data: chelsaCLIP
  - override /model: chelsaCLIP
  - override /callbacks: default
  - override /trainer: gpu
  - override /logger: wandb

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["chelsaCLIP"]

seed: 42

#ckpt_path: /shares/wegner.ics.uzh/CHELSA/checkpoints/epoch_060-v1.ckpt

trainer:
  min_epochs: 1
  max_epochs: 100
  gradient_clip_val: 0.5

data:
  batch_size: 4096
  climatology_dir: /shares/wegner.ics.uzh/CHELSA/Switzerland/1981-2010_numpy/
  input_dir: /shares/wegner.ics.uzh/CHELSA/Switzerland/input/
  #input_dir: /shares/wegner.ics.uzh/CHELSA/Gridsubset/10/
  skip_samples: 1
  use_all_for_training: true
  provide_chelsa_similarity_matrix: false #0.9
  local_multi_sampling: false
  return_size: 17
  sampler: srw_samp_world #rw_samp
  whiten_with_pca: false

logger:
  tags: ${tags}
  group: "chelsaCLIP"
  wandb:
    name: "${data.return_size}rs cnn"
    project: "chelsaCLIP"

model:
  optimizer:
    lr: 0.0001
    weight_decay: 0.0
  scheduler:
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    _partial_: true
    mode: min
    factor: 0.2
    patience: 2
  compile: false
  location_encoder:
    _target_: src.models.components.loc_encoder.SirenNet
    dim_in: 386
    dim_hidden: 2048
    dim_out: 256
    num_layers: 4
    dropout: false
  #chelsa_encoder:
  #  _target_: src.models.components.cnn.ConvNet
  #  input_dim: 11
  #  inp_size: ${data.return_size}
 #   hidden_dim: 64
 #   out_dim: ${model.location_encoder.dim_out}
  chelsa_encoder:
    _target_: src.models.components.cnn.PartsOfResNet18
    out_dim: ${model.location_encoder.dim_out}
  loss_fn:
    _target_: src.models.contrastive_loss.SigmoidClipLoss
    t_prime_init: 2.3026
    b_init: -10.0
  val_cases:
    test/sw_sdm:
      _target_: src.utils.test_cases.switzerland_glc_sdm.SW_SDM
      PO_path: '/shares/wegner.ics.uzh/glc23_data/Switzerland_PO.csv'
      mlp_input_len: ${model.location_encoder.dim_out}
      use_months: True
      verbose : false
      most_common_species_map: True
    test/pca_zur:
      _target_: src.utils.test_cases.map_visualization.CreateMapVisual
      months:
        - 3
      #  - 9
      reduction: pca
      scope: zur
    test/pca_swi:
      _target_: src.utils.test_cases.map_visualization.CreateMapVisual
      months:
        - 3
        - 9
      reduction: pca
      scope: swi_tc
    test/pca_euro:
      _target_: src.utils.test_cases.map_visualization.CreateMapVisual
      months:
        - 3
      #  - 9
      reduction: pca
      scope: euro
    test/pca:
      _target_: src.utils.test_cases.map_visualization.CreateMapVisual
      months:
        - 3
        - 9
      reduction: pca
      scope: world
    test/zur_grad:
      _target_: src.utils.test_cases.zurich_gradient_mean.ZGM
      months:
        - 3
        - 9
  provide_chelsa_similarity_matrix: ${data.provide_chelsa_similarity_matrix}

callbacks:
  early_stopping:
    monitor: "val/loss"
    patience: 5
    mode: "min"

  model_checkpoint:
    dirpath: ${paths.output_dir}/checkpoints
    filename: "epoch_{epoch:03d}"
    monitor: "val/loss"
    mode: "min"
    save_last: True
    auto_insert_metric_name: False
